{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","item","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,8BACI,sBAAMC,SAVM,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMd,SAEA,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEoBC,UAAUH,GAF9B,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAGFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAACpB,IAEGqB,EDpB2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,6CAAb,qBACb,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAmB,GACR,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAKjB,aEVrCkB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAIA,OACI,gCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IACnB,uBAEA,6BACK6C,EAAWrB,KAAI,SAACmB,EAAMG,GACnB,OAAO,cAAC,EAAD,CAAiB/B,SAAU4B,GAAbG,Y,MCdzCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4ef11e66.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length> 2){\r\n            setCategories(cats => [ inputValue, ...cats,]);\r\n            setInputValue(\"\");\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n            <input type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Mi5hzSnTuV0NYj5zoAVhma8nl2eHjhmT`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"card-grid animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(item => {\r\n                    return <GifGridItem key={item.id} {...item} />\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n\r\n                }, 3000);\r\n\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One Punch', 'Samuray X', 'Dragon Ball Z']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handlerAdd = () =>{\r\n    //     setCategories(cats => [...cats, 'HunterxHunter']);\r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={setCategories}></AddCategory>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {categories.map((item, i) => {\r\n                    return <GifGrid key={i} category={item}></GifGrid>\r\n                })}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}